name: Drun Convert + Run

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  convert-and-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Drun
        run: |
          pip install -U pip
          pip install -e .

      - name: Prepare .env
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          # 可选：追加更多密钥/配置
          # echo "API_KEY=${{ secrets.API_KEY }}" >> .env

      - name: Convert assets (if present)
        run: |
          mkdir -p testcases testsuites reports logs
          # cURL → 追加至单一用例文件，导入期脱敏与占位
          if [ -f assets/requests.curl ]; then
            drun convert assets/requests.curl \
              --into testcases/imported.yaml \
              --redact Authorization,Cookie \
              --placeholders
          fi
          # Postman → 拆分并生成 testsuite
          if [ -f assets/postman.json ]; then
            ENV_ARG=""
            if [ -f assets/postman_env.json ]; then ENV_ARG="--postman-env assets/postman_env.json"; fi
            drun convert assets/postman.json $ENV_ARG \
              --split-output \
              --suite-out testsuites/testsuite_postman.yaml \
              --redact Authorization \
              --placeholders
          fi
          # HAR → 过滤静态/仅 2xx/正则排除，写入单文件
          if [ -f assets/recording.har ]; then
            drun convert assets/recording.har \
              --exclude-static --only-2xx --exclude-pattern '(\\.png$|/cdn/)' \
              --outfile testcases/from_har.yaml
          fi
          # OpenAPI → 多文件输出（如果存在）
          if [ -f spec/openapi/ecommerce_api.json ]; then
            drun convert openapi spec/openapi/ecommerce_api.json \
              --tags users,orders \
              --split-output \
              --outfile testcases/from_openapi.yaml \
              --redact Authorization \
              --placeholders
          fi

      - name: Run regression suite
        run: |
          # 优先运行从 Postman 生成的 testsuite；否则运行已有回归套件
          SUITE=testsuites/testsuite_regression.yaml
          if [ -f testsuites/testsuite_postman.yaml ]; then SUITE=testsuites/testsuite_postman.yaml; fi
          mkdir -p reports logs
          drun run "$SUITE" \
            --env-file .env \
            --html reports/report.html \
            --report reports/run.json \
            --log-file logs/run.log \
            --mask-secrets

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: drun-reports-convert-run
          path: |
            reports/report.html
            reports/run.json
            logs/run.log
          if-no-files-found: warn
          retention-days: 7
