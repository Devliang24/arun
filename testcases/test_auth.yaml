config:
  name: Auth Flow
  base_url: ${ENV(BASE_URL)}
  tags: [auth]
  variables:
    user_username: ${ENV(USER_USERNAME)}
    user_password: ${ENV(USER_PASSWORD)}
steps:
  - name: login
    setup_hooks: [setup_hook_sign_request]
    request:
      method: POST
      url: /api/v1/auth/login
      json:
        username: $user_username
        password: $user_password
    extract:
      token: $.data.access_token
    validate:
      - eq: [status_code, 200]
      - contains: [headers.Content-Type, application/json]
      - eq: [$.success, true]
      - eq: [$.code, 200]
      - eq: [$.message, "登录成功"]
      - regex: [$.data.access_token, '^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+$']
      - eq: [$.data.token_type, bearer]
      - eq: [$.data.user.username, $user_username]
      - eq: [$.data.user.is_active, true]

  - name: whoami
    variables:
      authz: Bearer $token
    request:
      method: GET
      url: /api/v1/users/me
      headers:
        Authorization: $authz
    validate:
      - eq: [status_code, 200]
      - eq: [$.success, true]
      - eq: [$.code, 200]
      - eq: [$.message, "获取用户信息成功"]
      - eq: [$.data.username, $user_username]
      - eq: [$.data.is_active, true]
      - contains: [$.data, role]

  - name: logout
    variables:
      authz: Bearer $token
    request:
      method: DELETE
      url: /api/v1/auth/session
      headers:
        Authorization: $authz
    validate:
      - eq: [status_code, 200]
      - eq: [$.success, true]
      - eq: [$.code, 200]
      - eq: [$.message, "登出成功"]
      - contains: [$.data.instruction, JWT Token]
