config:
  name: 认证流程
  base_url: ${ENV(BASE_URL)}
  tags: [auth]
  variables:
    user_username: ${ENV(USER_USERNAME)}
    user_password: ${ENV(USER_PASSWORD)}
steps:
  - name: 注册用户
    request:
      method: POST
      url: /api/v1/auth/register
      body:
        username: u_${short_uid(12)}
        email: u_${uid()}@example.com
        password: "P@ssw0rd123"
        full_name: "User_${short_uid(10)}"
        shipping_address: ${ENV(SHIPPING_ADDRESS)}
    extract:
      user_username: $.data.username
    validate:
      - in: [status_code, [200, 201]]
      - eq: [$.success, true]
      - eq: [$.message, "用户注册成功"]

  - name: 登录
    setup_hooks:
      - ${setup_hook_sign_request($request)}
    request:
      method: POST
      url: /api/v1/auth/login
      body:
        username: $user_username
        password: $user_password
    extract:
      token: $.data.access_token
    validate:
      - eq: [status_code, 200]
      - contains: [headers.Content-Type, "application/json"]
      - eq: [$.success, true]
      - eq: [$.code, 200]
      - eq: [$.message, "登录成功"]
      - eq: [$.data.user.username, $user_username]
      - eq: [$.data.user.is_active, true]

  - name: 获取当前用户
    variables:
      authz: "Bearer $token"
    request:
      method: GET
      url: /api/v1/users/me
      headers:
        Authorization: $authz
    validate:
      - eq: [status_code, 200]
      - eq: [$.success, true]
      - eq: [$.code, 200]
      - eq: [$.message, "获取用户信息成功"]
      - eq: [$.data.username, $user_username]
      - eq: [$.data.is_active, true]
      - contains: [$.data, "role"]

  - name: 登出
    variables:
      authz: "Bearer $token"
    request:
      method: DELETE
      url: /api/v1/auth/session
      headers:
        Authorization: $authz
    validate:
      - eq: [status_code, 200]
      - eq: [$.success, true]
      - eq: [$.code, 200]
      - eq: [$.message, "登出成功"]
      - contains: [$.data.instruction, "JWT Token"]
