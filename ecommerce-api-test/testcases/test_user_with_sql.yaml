config:
  name: 用户测试-规范SQL断言示例
  base_url: ${ENV(BASE_URL)}
  tags: [user, sql, standard]
  variables:
    test_username: sqluser_${short_uid(8)}
    test_email: sqluser_${short_uid(8)}@example.com
    test_password: ${ENV(USER_PASSWORD)}

steps:
  # ==================== 测试1：用户注册和验证 ====================
  
  - name: 步骤1-注册新用户
    request:
      method: POST
      path: /api/v1/auth/register
      headers:
        Content-Type: application/json
      body:
        username: $test_username
        email: $test_email
        password: $test_password
        full_name: SQL Test User
        shipping_address: "SQL Test Street 123"
    extract:
      user_id: $.data.id
      created_username: $.data.username
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 201]
      - ne: [$.data.id, null]
      - eq: [$.data.username, $test_username]
      - eq: [$.data.email, $test_email]

  - name: 步骤2-登录获取token
    request:
      method: POST
      path: /api/v1/auth/login
      headers:
        Content-Type: application/json
      body:
        username: $test_username
        password: $test_password
    extract:
      token: $.data.access_token
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      - ne: [$.data.access_token, null]

  - name: 步骤3-验证用户数据（规范写法+完整SQL断言）
    setup_hooks:
      # ✅ 正确：setup准备数据，不断言
      - ${setup_hook_prepare_user_data($user_id)}
    variables:
      # 测试：在variables中调用Hook函数
      db_username_test: ${hook_query_user_username($user_id)}
      db_email_test: ${hook_query_user_email($user_id)}
    request:
      method: GET
      path: /api/v1/users/me
      headers:
        Authorization: Bearer $token
    validate:
      # ✅ 正确：所有断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证API返回值与数据库中的值一致
      - eq: [$.data.id, $user_id]
      # 测试：使用variables中的Hook函数返回值
      - eq: [$.data.username, $db_username_test]
      - eq: [$.data.email, $db_email_test]
      - eq: [$.data.role, "user"]
      - eq: [$.data.full_name, "SQL Test User"]
      - eq: [$.data.shipping_address, "SQL Test Street 123"]
      
      # 数据完整性断言
      - ne: [$.data.id, null]
      - ne: [$.data.username, null]
      - ne: [$.data.email, null]
      - ne: [$.data.role, null]
      - ne: [$.data.full_name, null]
      - ne: [$.data.shipping_address, null]
      - eq: [$.data.is_active, true]
    teardown_hooks:
      # ✅ 正确：teardown记录统计，不断言
      - ${teardown_hook_record_test_stats($response, $session_variables)}

  # ==================== 测试2：更新用户信息 ====================
  
  - name: 步骤4-更新用户信息
    request:
      method: PUT
      path: /api/v1/users/me
      headers:
        Authorization: Bearer $token
        Content-Type: application/json
      body:
        full_name: "Updated SQL User"
        shipping_address: "Updated Street 456"
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证更新后的响应（API返回更新后的数据）
      - eq: [$.data.full_name, "Updated SQL User"]
      - eq: [$.data.shipping_address, "Updated Street 456"]
      
      # 数据完整性断言
      - ne: [$.data.full_name, null]
      - ne: [$.data.shipping_address, null]
      - eq: [$.data.id, $user_id]

  - name: 步骤5-验证更新后的数据（完整SQL断言）
    request:
      method: GET
      path: /api/v1/users/me
      headers:
        Authorization: Bearer $token
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证API返回值与数据库中的值一致（使用已知的更新值）
      - eq: [$.data.id, $user_id]
      - eq: [$.data.username, $test_username]
      - eq: [$.data.email, $test_email]
      - eq: [$.data.full_name, "Updated SQL User"]
      - eq: [$.data.shipping_address, "Updated Street 456"]
      - eq: [$.data.role, "user"]
      
      # 数据完整性断言
      - ne: [$.data.full_name, null]
      - ne: [$.data.shipping_address, null]
      - ne: [$.data.role, null]

  # ==================== 测试3：清理测试数据 ====================
  
  - name: 步骤6-最后验证并清理（完整SQL断言）
    request:
      method: GET
      path: /api/v1/users/me
      headers:
        Authorization: Bearer $token
    validate:
      # ✅ 正确：断言在validate中
      - eq: [status_code, 200]
      
      # SQL断言：验证API返回值与数据库中的最终值一致
      - eq: [$.data.id, $user_id]
      - eq: [$.data.username, $test_username]
      - eq: [$.data.email, $test_email]
      - eq: [$.data.full_name, "Updated SQL User"]
      - eq: [$.data.shipping_address, "Updated Street 456"]
      - eq: [$.data.role, "user"]
      
      # 数据完整性断言
      - ne: [$.data.id, null]
      - ne: [$.data.username, null]
      - ne: [$.data.email, null]
    teardown_hooks:
      # ✅ 正确：teardown清理测试用户
      - ${teardown_hook_cleanup_test_user($response, $session_variables)}
      - ${teardown_hook_record_test_stats($response, $session_variables)}
